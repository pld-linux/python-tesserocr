--- tesserocr-2.3.1/tesseract.pxd~	2018-02-04 20:28:35.000000000 +0100
+++ tesserocr-2.3.1/tesseract.pxd	2018-08-16 22:58:33.358727376 +0200
@@ -198,19 +198,6 @@
         cdef cppclass TessOsdRenderer(TessResultRenderer):
             TessOsdRenderer(cchar_t *) except +
 
-cdef extern from "tesseract/osdetect.h" nogil:
-    struct OSBestResult:
-        int orientation_id
-        int script_id
-        float sconfidence
-        float oconfidence
-
-    ctypedef int (*get_best_script)(int)
-
-    struct OSResults:
-        get_best_script get_best_script
-        OSBestResult best_result
-
 cdef extern from "tesseract/baseapi.h" namespace "tesseract" nogil:
 
     IF TESSERACT_VERSION >= 0x040000:
@@ -312,7 +312,6 @@
             int IsValidWord(cchar_t *)
             bool IsValidCharacter(cchar_t *)
             bool GetTextDirection(int *, float *)
-            bool DetectOS(OSResults *);
             cchar_t *GetUnichar(int)
             const OcrEngineMode oem() const
             void set_min_orientation_margin(double)
@@ -386,7 +385,6 @@
             int IsValidWord(cchar_t *)
             bool IsValidCharacter(cchar_t *)
             bool GetTextDirection(int *, float *)
-            bool DetectOS(OSResults *);
             cchar_t *GetUnichar(int)
             const OcrEngineMode oem() const
             void set_min_orientation_margin(double)
--- tesserocr-2.3.1/tesserocr.pyx~	2018-08-13 19:35:16.000000000 +0200
+++ tesserocr-2.3.1/tesserocr.pyx	2018-08-16 23:00:17.290796571 +0200
@@ -2292,26 +2292,6 @@
         self._baseapi.GetTextDirection(&out_offset, &out_slope)
         return out_offset, out_slope
 
-    def DetectOS(self):
-        """Estimate the Orientation and Script of the image.
-
-        Returns:
-            `dict` or `None` if image was not successfully processed. dict contains:
-                - orientation: Orientation ids [0..3] map to [0, 270, 180, 90] degree orientations of the
-                  page respectively, where the values refer to the amount of clockwise
-                  rotation to be applied to the page for the text to be upright and readable.
-                - oconfidence: Orientation confidence.
-                - script: Index of the script with the highest score for this orientation.
-                - sconfidence: script confidence.
-        """
-        cdef OSResults results
-        if self._baseapi.DetectOS(&results):
-            return {'orientation': results.best_result.orientation_id,
-                    'oconfidence': results.best_result.oconfidence,
-                    'script': results.get_best_script(results.best_result.orientation_id),
-                    'sconfidence': results.best_result.sconfidence}
-        return None
-
     def GetUnichar(self, int unichar_id):
         """Return the string form of the specified unichar.
 
